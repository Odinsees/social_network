{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","App.module.css","Components/Profile/Profile.module.css","Components/Header/Header.module.css","redux/state.tsx","image/pngwing.com.png","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Components/Profile/ProfileInfo/Avatar.jpg","image/Icon/likes.svg","Components/Profile/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileImage.jpg","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/Dialogs/DialogsItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","getState","this","_callSubscriber","console","log","AddPost","trim","NewPost","unshift","updateNewPostText","newText","subscribe","observer","Header","className","s","src","imageSrc","alt","Title","Navbar","nav","itemProfile","to","activeClassName","active","itemDialogs","itemNews","itemMusic","itemSettings","Post","props","item","Avatar","Message","MessageText","LikesCount","LikeImg","Like","MyPosts","PostsState","newPostElement","React","createRef","postBlock","PostsTitle","TextArea","ref","onKeyPress","event","key","onChange","e","text","target","value","AddPostButton","onClick","current","Posts","map","p","ProfileInfo","ProfileInfoImage","ProfileImage","descriptionBlock","Description","UserName","UserBirthDay","UserAddress","Profile","DialogsItem","path","dialog","Dialogs","state","newMessageElement","dialogsItems","d","m","alert","News","Music","Settings","App","colorWrapper","exact","render","Wrapper","AppContent","component","Footer","FooterTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireThree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.a2f4c256.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2_mOR\",\"active\":\"Navbar_active__DQTSG\",\"itemProfile\":\"Navbar_itemProfile__3QnZX\",\"itemDialogs\":\"Navbar_itemDialogs___jTF1\",\"itemNews\":\"Navbar_itemNews__eEhfa\",\"itemMusic\":\"Navbar_itemMusic__25TtA\",\"itemSettings\":\"Navbar_itemSettings__2SuKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__2STkw\",\"ProfileInfoImage\":\"ProfileInfo_ProfileInfoImage__2iAR-\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3wLGq\",\"Description\":\"ProfileInfo_Description__2dU0E\",\"Avatar\":\"ProfileInfo_Avatar__2X-Iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1HvCN\",\"dialogsItems\":\"Dialogs_dialogsItems__fpnHB\",\"active\":\"Dialogs_active__222UT\",\"messages\":\"Dialogs_messages__1RBzC\",\"message\":\"Dialogs_message__CPBlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__IAAOg\",\"Avatar\":\"Post_Avatar__N5XFr\",\"Message\":\"Post_Message__3oQby\",\"MessageText\":\"Post_MessageText__WcRiZ\",\"LikesCount\":\"Post_LikesCount__3e3F8\",\"LikeImg\":\"Post_LikeImg__FrWmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBlock\":\"MyPosts_PostBlock__11rKv\",\"PostsTitle\":\"MyPosts_PostsTitle__3lrrt\",\"NewPost\":\"MyPosts_NewPost__a08IG\",\"TextArea\":\"MyPosts_TextArea__2wycN\",\"AddPostButton\":\"MyPosts_AddPostButton__2DvWT\",\"Posts\":\"MyPosts_Posts__TjiFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorWrapper\":\"App_colorWrapper__3i_iG\",\"Wrapper\":\"App_Wrapper__CHeuK\",\"Header\":\"App_Header__ROu3w\",\"Navbar\":\"App_Navbar__14QgL\",\"AppContent\":\"App_AppContent__1_lgU\",\"Footer\":\"App_Footer__1ZRDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__1A_oZ\",\"ProfileInfo\":\"Profile_ProfileInfo__2SdLM\",\"MyPosts\":\"Profile_MyPosts__1BDT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__ZNEXn\",\"Title\":\"Header_Title__148t2\"};","export type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogsType[]\r\n    messages: MessagesType[]\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _callSubscriber: () => void\r\n    AddPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n    subscribe: (observer: () => void) => void\r\n    getState:()=>RootStateType\r\n}\r\n\r\nexport let store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: \"Hi my friend!\", likesCount: 12},\r\n                {id: 2, message: \"I am learn React!\", likesCount: 100},\r\n                {id: 3, message: \"I am learn JS!\", likesCount: 123},\r\n                {id: 4, message: \"I am learn HTML!\", likesCount: 13},\r\n                {\r\n                    id: 5,\r\n                    message: \"Hello MAZAFAKA! Я стану программистом и буду херачить в кайф!!!!!\",\r\n                    likesCount: 11232101\r\n                },\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: \"Pavel\"},\r\n                {id: 2, name: \"Irina\"},\r\n                {id: 3, name: \"Sergey\"},\r\n                {id: 4, name: \"Anna\"},\r\n                {id: 5, name: \"Olia\"}\r\n            ],\r\n            messages: [\r\n                {id: 1, message: \"Hello\"},\r\n                {id: 2, message: \"Watsaaaaaap men\"},\r\n                {id: 3, message: \"Ratatata\"},\r\n                {id: 4, message: \"Yo\"},\r\n                {id: 5, message: \"Hello bro\"}\r\n            ]\r\n        }\r\n    },\r\n    getState(){\r\n        return this._state\r\n    },\r\n    _callSubscriber() {\r\n        console.log('state was changed')\r\n    },\r\n    AddPost() {\r\n        if (this._state.profilePage.newPostText.trim() !== \"\" && this._state.profilePage.newPostText !== \"Add text\") {\r\n            let NewPost: PostsType = {id: 6, message: this._state.profilePage.newPostText, likesCount: 0}\r\n            this._state.profilePage.posts.unshift(NewPost)\r\n            this._callSubscriber()\r\n            this._state.profilePage.newPostText = \"\"\r\n        }\r\n    },\r\n    updateNewPostText(newText: string) {\r\n        this._state.profilePage.newPostText = newText\r\n        this._callSubscriber()\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    }\r\n}\r\n\r\n\r\n/*\r\nlet rerenderEntireThree = () =>{\r\n    console.log('state was changed')\r\n}\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText:string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogsType[]\r\n    messages: MessagesType[]\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nexport let state: RootStateType = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: \"Hi my friend!\", likesCount: 12},\r\n            {id: 2, message: \"I am learn React!\", likesCount: 100},\r\n            {id: 3, message: \"I am learn JS!\", likesCount: 123},\r\n            {id: 4, message: \"I am learn HTML!\", likesCount: 13},\r\n            {id: 5, message: \"Hello MAZAFAKA! Я стану программистом и буду херачить в кайф!!!!!\", likesCount: 11232101},\r\n        ],\r\n        newPostText:''\r\n    },\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: \"Pavel\"},\r\n            {id: 2, name: \"Irina\"},\r\n            {id: 3, name: \"Sergey\"},\r\n            {id: 4, name: \"Anna\"},\r\n            {id: 5, name: \"Olia\"}\r\n        ],\r\n        messages: [\r\n            {id: 1, message: \"Hello\"},\r\n            {id: 2, message: \"Watsaaaaaap men\"},\r\n            {id: 3, message: \"Ratatata\"},\r\n            {id: 4, message: \"Yo\"},\r\n            {id: 5, message: \"Hello bro\"}\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nexport const AddPost = () =>{\r\n    if (state.profilePage.newPostText.trim() !==\"\" && state.profilePage.newPostText !== \"Add text\"){\r\n        let NewPost:PostsType = {id: 6, message: state.profilePage.newPostText, likesCount: 0}\r\n        state.profilePage.posts.unshift(NewPost)\r\n        rerenderEntireThree()\r\n        state.profilePage.newPostText = \"\"\r\n    }\r\n}\r\n\r\nexport const updateNewPostText = (newText:string) =>{\r\n    state.profilePage.newPostText = newText\r\n    rerenderEntireThree()\r\n}\r\n\r\nexport const subscribe=(observer:()=>void)=>{\r\n    rerenderEntireThree = observer\r\n}*/\r\n","export default __webpack_public_path__ + \"static/media/pngwing.com.2079388c.png\";","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport imageSrc from \"../../image/pngwing.com.png\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n            <div className={s.Header}>\r\n                    <img src={imageSrc} alt=\"logo\"/>\r\n                    <div className={s.Title}>IT solution</div>\r\n            </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.itemProfile}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={s.itemDialogs}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Massages</NavLink>\r\n            </div>\r\n            <div className={s.itemNews}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.itemMusic}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.itemSettings}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Avatar.09bf7bc7.jpg\";","export default __webpack_public_path__ + \"static/media/likes.f4a1ad15.svg\";","import React from 'react';\r\nimport \"./Post.module.css\"\r\nimport s from \"./Post.module.css\";\r\nimport Avatar from \"../ProfileInfo/Avatar.jpg\"\r\nimport Like from \"../../../image/Icon/likes.svg\"\r\n\r\ntype PostType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport const Post: React.FC<PostType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                className={s.Avatar}\r\n                src={Avatar}\r\n                alt=\"ava\"/>\r\n            <div className={s.Message}>\r\n                <div className={s.MessageText}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className={s.LikesCount}>\r\n                <div>\r\n                    like {props.likesCount}\r\n                </div>\r\n                <img\r\n                    className={s.LikeImg}\r\n                    src={Like} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*export default Post;*/\r\n\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport {Post} from '../Post/Post';\r\nimport \"./MyPosts.module.css\"\r\nimport s from \"./MyPosts.module.css\";\r\nimport {PostsType} from \"../../../redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    PostsState: PostsType[]\r\n    AddPost: () => void\r\n    newPostText:string\r\n    updateNewPostText:(newText:string)=>void\r\n}\r\n\r\n\r\nexport const MyPosts: React.FC<PropsType> = ({PostsState, AddPost,newPostText,updateNewPostText}) => {\r\n\r\n    const postsHandler = () => PostsState.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let onClickHandler = () => {\r\n        if (newPostElement.current) {\r\n            AddPost()\r\n        }\r\n    }\r\n\r\n    let onKeyPressHandler = (event:KeyboardEvent<HTMLTextAreaElement>) =>{\r\n        if (event.key === \"Enter\" && \"Shift\"){\r\n            AddPost()\r\n        }\r\n    }\r\n\r\n    let onPostChange = (e:ChangeEvent<HTMLTextAreaElement>) =>{\r\n        let text = e.target.value\r\n        updateNewPostText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div className={s.PostsTitle}>\r\n                <h2>My posts</h2>\r\n            </div>\r\n            <div className={s.NewPost}>\r\n                    <textarea className={s.TextArea}\r\n                              ref={newPostElement}\r\n                              onKeyPress={onKeyPressHandler}\r\n                              onChange={onPostChange}\r\n                              value={newPostText}\r\n                    />\r\n                    <button className={s.AddPostButton} onClick={onClickHandler}> send</button>\r\n            </div>\r\n            <div className={s.Posts}>\r\n                {postsHandler()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/ProfileImage.083920a2.jpg\";","import React from 'react';\r\nimport \"./ProfileInfo.module.css\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileImage from \"./ProfileImage.jpg\";\r\nimport Avatar from \"./Avatar.jpg\"\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div className={s.ProfileInfo}>\r\n            <img\r\n                className={s.ProfileInfoImage}\r\n                src={ProfileImage}\r\n                alt=\"ProfileImage\"\r\n            />\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.Description}>\r\n                    <div className={s.UserName}>Lebedev Pavel</div>\r\n                    <div className={s.UserBirthDay}>17.04.1997</div>\r\n                    <div className={s.UserAddress}>Belarus/Minsk</div>\r\n                </div>\r\n                <img className={s.Avatar} src={Avatar} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./Profile.module.css\"\r\nimport s from \"./Profile.module.css\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfilePageType} from \"../../redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    profilePage: ProfilePageType\r\n    AddPost:()=>void\r\n    updateNewPostText:(newText:string)=>void\r\n}\r\n\r\nexport const Profile: React.FC<PropsType> = ({profilePage,AddPost,updateNewPostText}) => {\r\n    return (\r\n        <div className={s.Profile}>\r\n            <div className={s.ProfileInfo}>\r\n                <ProfileInfo/>\r\n            </div>\r\n            <div className={s.MyPosts}>\r\n                <MyPosts\r\n                    PostsState={profilePage.posts}\r\n                    AddPost={AddPost}\r\n                    newPostText={profilePage.newPostText}\r\n                    updateNewPostText={updateNewPostText}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype DialogsItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\n\r\nexport const DialogsItem: React.FC<DialogsItemType> = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MassageType = {\r\n    message: string\r\n}\r\n\r\n\r\nexport const Message: React.FC<MassageType> = (props) => {\r\n    return (\r\n        <div\r\n            className={s.dialog}>{props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {DialogsItem} from './DialogsItem/DialogsItem';\r\nimport {Message} from './Message/Message';\r\nimport {DialogsPageType} from \"../../redux/state\";\r\n\r\n\r\ntype PropsType = {\r\n    state:DialogsPageType\r\n}\r\n\r\nexport const Dialogs: React.FC<PropsType> = ({state}) => {\r\n\r\n\r\n    const dialogsHandler = () => state.dialogs.map(d => <DialogsItem id={d.id} name={d.name}/>)\r\n\r\n    const messagesHandler = () => state.messages.map(m => <Message message={m.message}/>)\r\n\r\n    let newMessageElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const sendMessage = () =>{\r\n        alert(newMessageElement.current?.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsHandler()}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesHandler()}\r\n                <textarea ref={newMessageElement}></textarea>\r\n                <button onClick={sendMessage}>send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nexport const News = (props: any) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nexport const Music = (props: any) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = (props: any) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport s from './App.module.css';\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {Header} from \"./Components/Header/Header\";\nimport {Navbar} from \"./Components/Navbar/Navbar\";\nimport {Profile} from \"./Components/Profile/Profile\";\nimport {Dialogs} from \"./Components/Dialogs/Dialogs\";\nimport {News} from \"./Components/News/News\";\nimport {Music} from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\nimport {RootStateType} from \"./redux/state\";\n\n\ntype PropsType = {\n    store:RootStateType\n    AddPost: () => void\n    updateNewPostText: (newText: string) => void\n}\n\n\nconst App: React.FC<PropsType> = ({store, AddPost, updateNewPostText}) => {\n    return (\n        <HashRouter>\n            <div className={s.colorWrapper}>\n                <Switch>\n                    <Route path={'/'} exact render={() => <Redirect to={'/profile'}/>}/>\n                    <div className={s.Wrapper}>\n                        <div className={s.Header}>\n                            <Header/>\n                        </div>\n                        <div className={s.Navbar}>\n                            <Navbar/>\n\n                        </div>\n                        <div className={s.AppContent}>\n                            <Route\n                                path='/profile'\n                                render={() =>\n                                    <Profile\n                                        profilePage={store.profilePage}\n                                        AddPost={AddPost}\n                                        updateNewPostText={updateNewPostText}\n                                    />}/>\n                            <Route\n                                path='/dialogs'\n                                render={() =>\n                                    <Dialogs\n                                        state={store.dialogsPage}\n                                    />}\n                            />\n                            <Route path='/news' component={News}/>\n                            <Route path='/music' component={Music}/>\n                            <Route path='/settings' component={Settings}/>\n                        </div>\n                        <div className={s.Footer}>\n                            <div className={s.FooterTitle}>\n                                LEBEDEV PAVEL 2021\n                            </div>\n                        </div>\n                    </div>\n                </Switch>\n            </div>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {store} from \"./redux/state\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nlet rerenderEntireThree = () =>{\n    ReactDOM.render(\n        <React.StrictMode>\n                <App\n                    store={store.getState()}\n                    AddPost={store.AddPost.bind(store)}\n                    updateNewPostText={store.updateNewPostText.bind(store)}\n                />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireThree()\nstore.subscribe(rerenderEntireThree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n"],"sourceRoot":""}